50. Pow(x, n)
public double myPow(double x, int n) {
        if(n == 0 ) return 1;
        double half = myPow(x,n/2);
        
        if(n % 2 == 0){
            return half * half;
        }
        else if(n>0){
            return half * half * x;
        }

        else{
            return half * half / x;
        }
    }


public boolean isPowerOfThree(int n) {
        while(n  % 3 == 0 && n>1)
        {
            n = n /3;
        }
        return n == 1;
    }

all power of 4 % 3 must be 1, however, num % 3==1 is not necessarily power of 4. You can also prove it

public boolean isPowerOfFour(int num) {
        return (num & (num - 1)) == 0 && num % 3 == 1;
    }