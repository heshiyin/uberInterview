74. Search a 2D Matrix
public boolean searchMatrix(int[][] matrix, int target) {
        if(matrix==null||matrix.length==0||matrix[0].length==0) return false;
        int row = matrix.length;
        int col = matrix[0].length;
        if(row == 0 || col == 0 )return false;
        int low =0 , high = row*col-1;
        while(low<=high){
            int mid = (low+high)/2;
            if(matrix[mid/col][mid%col]==target){
                return true;
            }
            else if(matrix[mid/col][mid%col]>target){
                high = mid-1;
            }
            else{
                low = mid+1;
            }
        }
        return false;
    }


=============================================
public boolean searchMatrix(int[][] matrix, int target) {
        if(matrix == null || matrix.length < 1 || matrix[0].length <1) {
            return false;
        }
        int col = matrix[0].length-1;
        int row = 0;
        while(col >= 0 && row <= matrix.length-1) {
            if(target == matrix[row][col]) {
                return true;
            } else if(target < matrix[row][col]) {
                col--;
            } else if(target > matrix[row][col]) {
                row++;
            }
        }
        return false;
    }