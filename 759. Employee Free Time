759. Employee Free Time

Input: schedule = [[[1,2],[5,6]],[[1,3]],[[4,10]]]
Output: [[3,4]]
Explanation:
There are a total of three employees, and all common
free time intervals would be [-inf, 1], [3, 4], [10, inf].
We discard any intervals that contain inf as they aren't finite.

public List<Interval> employeeFreeTime(List<List<Interval>> schedule) {
        PriorityQueue<Interval> pq = new PriorityQueue<Interval>((a,b)->a.start-b.start);
        schedule.forEach(s->{
            pq.addAll(s);
        });
        List<Interval> result = new ArrayList<>();
        Interval cur = pq.poll();
        while(!pq.isEmpty()){
            if(cur.end< pq.peek().start){
                result.add(new Interval(cur.end, pq.peek().start));
                cur = pq.poll();
            }
            else{
                cur = cur.end>pq.peek().end? cur: pq.peek();
                pq.poll();
            }

        }
        return result;
        
    }