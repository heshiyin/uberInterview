772. Basic Calculator III
"1 + 1" = 2
" 6-4 / 2 " = 4
"2*(5+5*2)/3+(6/2+8)" = 21
"(2+6* 3+5- (3*14/7+2)*5)+3"=-12

public int calculate(String s) {
        int res= 0;
		s = s.replaceAll("\\s+", "");
        Stack<Integer> stack = new Stack<>();
        char sign = '+';
        int num=0;
        for(int i = 0 ; i < s.length();) {
            char c = s.charAt(i);
            if(Character.isDigit(c)){
            	num=num*10+c-'0';
            }
            if (c == '(') {
                // find the block and use the recursive to solve
            	int count = countValid(s.substring(i));
                num = calculate(s.substring(i + 1, i + count));
                i += count;
            }
            if(i==s.length()-1||(s.charAt(i) != ' ' && !Character.isDigit(s.charAt(i)))){
                if(sign=='+') stack.push(num);
                if(sign=='-') stack.push(-1*num);
                if(sign=='*') stack.push(stack.pop()*num);
                if(sign=='/') stack.push(stack.pop()/num);
                num=0;
                sign=s.charAt(i);
        	}
         i++;
        }
        while(!stack.isEmpty()) {
            res += stack.pop();
        }
        
        return (int)res;
    }
    static int countValid(String s){
            int counter = 0;
            int i = 0;
            while(i < s.length()) {
                if(s.charAt(i) =='(') counter ++;
                else if(s.charAt(i) ==')') counter --;
                if(counter == 0) break;
                i++;
            } 
            return i;
        }


 ================================
 简单版 
 Input: "3+2*2"
 Output: 7
 public int calculate(String s) {
        if(s==null||s.length()==0) return 0;
        int len = s.length(),sum=0,num=0;
        char sign = '+';
        Stack<Integer> stack = new Stack<>();
        for(int i = 0 ; i < len ; i++){
            char cur = s.charAt(i);
            if(Character.isDigit(cur)){
                num = 10* num + cur-'0';
            }
            if((!Character.isDigit(s.charAt(i)) &&' '!=s.charAt(i)) || i==len-1){
                if(sign=='+'||sign=='-'){
                    num = sign=='+'? num : -num;
                }
                else if(sign=='*'||sign=='/'){
                    num = sign=='*'? stack.pop()*num : stack.pop()/num;
                }
                stack.push(num);
                sign=s.charAt(i);
                num=0;
            }
           
        }
        for(int val:stack){
            sum+=val;
        }
        return sum;
    }
